{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAkBpC,SAASC,EAAcC,EAAUC,GAe/B,OAdgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAM,C,SACVR,E,MACAC,GAEFQ,YAAW,KACLJ,EACFF,EAAQK,GAERJ,EAAOI,EAAI,GAEZP,EAAM,G,CA7BbL,EAAKc,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAKkB,OAAOC,MAAOF,IAAK,CAC1Bd,EAAcc,EAAGG,OAAOpB,EAAKK,MAAMc,OAAUnB,EAAKqB,KAAKF,MAAQF,GACvEK,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACxBkB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEvEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  for (let i = 1; i < form.amount.value; i++) {\n    const promise = createPromise(i, Number(form.delay.value) + (form.step.value * i));\n    promise.then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const obj = {\n      position,\n      delay,\n    };\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        reject(obj);\n      }\n    }, delay)\n  });;\n  return promise;\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","obj","setTimeout","addEventListener","e","preventDefault","i","amount","value","Number","step","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c47e9c44.js.map"}